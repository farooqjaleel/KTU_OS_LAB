valid.y
%{
    #include<stdio.h>
    int flag=0;
   
%}
%token NUMBER

%left '+' '-'
%left '*' '/' '%'
%left '(' ')'
%%
ArithmeticExpression: E{
         printf("\nResult=%d\n",$$);
         return 0;
        }
E:E'+'E {$$=$1+$3;}
 |E'-'E {$$=$1-$3;}
 |E'*'E {$$=$1*$3;}
 |E'/'E {$$=$1/$3;}
 |E'%'E {$$=$1%$3;}
 |'('E')' {$$=$2;}
 | NUMBER {$$=$1;}
;
%%

void main()
{
   printf("\nEnter Any Arithmetic Expression which can have operations Addition, Subtraction, Multiplication, Divison, Modulus and Round brackets:\n");
   yyparse();
  if(flag==0)
   printf("\nEntered arithmetic expression is Valid\n\n");
 
}
void yyerror()
{
   printf("\nEntered arithmetic expression is Invalid\n\n");
   flag=1;
}


validtex.l

%{
#include<stdio.h>
#include "y.tab.h"
extern int yylval;
%}

%%
[0-9]+ {
          yylval=atoi(yytext);
          return NUMBER;
       }
[\t] ;
[\n] return 0;
. return yytext[0];
%%
int yywrap()
{
return 1;
}
anagha@anagha-Inspiron-N5110:~$ lex validtex.l
anagha@anagha-Inspiron-N5110:~$ yacc -d valid.y
valid.y:24 parser name defined to default :"parse"
anagha@anagha-Inspiron-N5110:~$ ./a.out
Enter the Expression:
2+3
5
Success
anagha@anagha-Inspiron-N5110:~$ 2-4=
2-4=: command not found
anagha@anagha-Inspiron-N5110:~$ ./a.out
Enter the Expression:
2++3
ERROR: Invalid Arithmetic Expression
